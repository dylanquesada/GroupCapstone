@model List<GroupCapstone.Models.ApplicationUser>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<head>
    <style>
        #map {
            height: 400px;
            width: 800px;
        }
    </style>
</head>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model[0].Address)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Rating)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].PhoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Price)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        if (item.Shovelee == true)
        {

        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.ActionLink("Pick", "Pick", new { id = item.Id })
            </td>
        </tr>

        }

    }

</table>

<div id="map"></div>
<script>
    function initMap() {
        var user = @Html.Raw(Json.Encode(Model));
        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 4,
            center: new google.maps.LatLng(10,-87.3),
            mapTypeId: 'terrain'
        });
        for (i = 0; i < user.length; i++) {
            if(user[i]['Shovelee'] == true){
                var myLatLng = new google.maps.LatLng(user[i]['Latitude'], user[i]['Longitude'])

                var marker = new google.maps.Marker({
                    position: myLatLng,
                    map: map
                });
                map.center = myLatLng;
            }
        }
    }

</script>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC4ALH2fGv4h1UC3bN0y8QgmOJCEhop7K8&callback=initMap">
</script>
